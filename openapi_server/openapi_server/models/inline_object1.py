# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineObject1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title=None, description=None, ingredients=None, instructions=None):  # noqa: E501
        """InlineObject1 - a model defined in OpenAPI

        :param title: The title of this InlineObject1.  # noqa: E501
        :type title: str
        :param description: The description of this InlineObject1.  # noqa: E501
        :type description: str
        :param ingredients: The ingredients of this InlineObject1.  # noqa: E501
        :type ingredients: List[str]
        :param instructions: The instructions of this InlineObject1.  # noqa: E501
        :type instructions: str
        """
        self.openapi_types = {
            'title': str,
            'description': str,
            'ingredients': List[str],
            'instructions': str
        }

        self.attribute_map = {
            'title': 'title',
            'description': 'description',
            'ingredients': 'ingredients',
            'instructions': 'instructions'
        }

        self._title = title
        self._description = description
        self._ingredients = ingredients
        self._instructions = instructions

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object_1 of this InlineObject1.  # noqa: E501
        :rtype: InlineObject1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self):
        """Gets the title of this InlineObject1.


        :return: The title of this InlineObject1.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this InlineObject1.


        :param title: The title of this InlineObject1.
        :type title: str
        """

        self._title = title

    @property
    def description(self):
        """Gets the description of this InlineObject1.


        :return: The description of this InlineObject1.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InlineObject1.


        :param description: The description of this InlineObject1.
        :type description: str
        """

        self._description = description

    @property
    def ingredients(self):
        """Gets the ingredients of this InlineObject1.


        :return: The ingredients of this InlineObject1.
        :rtype: List[str]
        """
        return self._ingredients

    @ingredients.setter
    def ingredients(self, ingredients):
        """Sets the ingredients of this InlineObject1.


        :param ingredients: The ingredients of this InlineObject1.
        :type ingredients: List[str]
        """

        self._ingredients = ingredients

    @property
    def instructions(self):
        """Gets the instructions of this InlineObject1.


        :return: The instructions of this InlineObject1.
        :rtype: str
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this InlineObject1.


        :param instructions: The instructions of this InlineObject1.
        :type instructions: str
        """

        self._instructions = instructions
