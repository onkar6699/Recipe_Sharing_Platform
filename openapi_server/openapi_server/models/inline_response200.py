# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.recipe import Recipe
from openapi_server import util

from openapi_server.models.recipe import Recipe  # noqa: E501

class InlineResponse200(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipes=None, total=None, pages=None, current_page=None):  # noqa: E501
        """InlineResponse200 - a model defined in OpenAPI

        :param recipes: The recipes of this InlineResponse200.  # noqa: E501
        :type recipes: List[Recipe]
        :param total: The total of this InlineResponse200.  # noqa: E501
        :type total: int
        :param pages: The pages of this InlineResponse200.  # noqa: E501
        :type pages: int
        :param current_page: The current_page of this InlineResponse200.  # noqa: E501
        :type current_page: int
        """
        self.openapi_types = {
            'recipes': List[Recipe],
            'total': int,
            'pages': int,
            'current_page': int
        }

        self.attribute_map = {
            'recipes': 'recipes',
            'total': 'total',
            'pages': 'pages',
            'current_page': 'current_page'
        }

        self._recipes = recipes
        self._total = total
        self._pages = pages
        self._current_page = current_page

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipes(self):
        """Gets the recipes of this InlineResponse200.


        :return: The recipes of this InlineResponse200.
        :rtype: List[Recipe]
        """
        return self._recipes

    @recipes.setter
    def recipes(self, recipes):
        """Sets the recipes of this InlineResponse200.


        :param recipes: The recipes of this InlineResponse200.
        :type recipes: List[Recipe]
        """

        self._recipes = recipes

    @property
    def total(self):
        """Gets the total of this InlineResponse200.


        :return: The total of this InlineResponse200.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this InlineResponse200.


        :param total: The total of this InlineResponse200.
        :type total: int
        """

        self._total = total

    @property
    def pages(self):
        """Gets the pages of this InlineResponse200.


        :return: The pages of this InlineResponse200.
        :rtype: int
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this InlineResponse200.


        :param pages: The pages of this InlineResponse200.
        :type pages: int
        """

        self._pages = pages

    @property
    def current_page(self):
        """Gets the current_page of this InlineResponse200.


        :return: The current_page of this InlineResponse200.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this InlineResponse200.


        :param current_page: The current_page of this InlineResponse200.
        :type current_page: int
        """

        self._current_page = current_page
